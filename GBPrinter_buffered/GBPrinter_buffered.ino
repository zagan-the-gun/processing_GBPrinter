/* This is based on the works of Miles Burton and the furrtek gang/guy.
 * I made this a library for easier integration into sketches
 * TODO: 
 * TextToPrint ( thats what the alphabet array is for)
 * 
 * 
 * Byte1 0x0101 0101
 * Byte2 0x0011 0011
 * color   0123 0123
 * 
 * http://www.milesburton.com/Gameboy_Printer_with_Arduino
 */
 
#include <GBPrinter.h>
#include <avr/pgmspace.h>


//uint8_t c,b,cmd,repl,buffer[64];
uint8_t cmd;
uint16_t CRC;

/*
  copy the hex output from http://davedarko.com/gameboy.php here
  but make sure your arduino really got the byte size memory
  I "bricked" a fake arduino uploading a script that was supposed to be 
  smaller then the max amount.
*/

const char row0[640] PROGMEM = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0xB0, 0x00, 0x50, 0x00, 0x20, 0x00, 0x48, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x04, 0x0A, 0x04, 0x02, 0x00, 0x02, 0x00, 0x01, 0x00, 0x53, 0x00, 0x00, 0x00, 0x06, 0x02, 0x3C, 0x3E, 0x00, 0x00, 0xBE, 0x00, 0x80, 0x00, 0x40, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x30, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0x00, 0x03, 0x00, 0x02, 0x00, 0x05, 0x00, 0x03, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0xDF, 0x00, 0x9F, 0x00, 0xFF, 0x00, 0xDF, 0x00, 0xBE, 0x00, 0x00, 0x01, 0x06, 0x02, 0x05, 0x05, 0xEA, 0x0F, 0xD0, 0x0F, 0xB0, 0x1B, 0x64, 0x1F, 0xA0, 0x00, 0x00, 0xFE, 0x01, 0xCF, 0x10, 0x8F, 0x00, 0x80, 0x73, 0xE0, 0x13, 0xF2, 0x0D, 0xEF, 0x30, 0x00, 0x00, 0x30, 0xC8, 0x38, 0xC4, 0xBE, 0x40, 0xBC, 0x43, 0x57, 0xA8, 0x6F, 0x90, 0xFF, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0xD7, 0x85, 0x7A, 0xDF, 0xA0, 0xFF, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x00, 0xC8, 0x00, 0xFF, 0x30, 0xCF, 0x38, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x60, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x11, 0x00, 0x21, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};
const char row1[640] PROGMEM = {
0x00, 0x20, 0x00, 0x50, 0x00, 0x00, 0x00, 0x20, 0x00, 0x54, 0x00, 0x22, 0x00, 0x2D, 0x00, 0x5B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0xFE, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x20, 0xDF, 0x18, 0xE7, 0x20, 0x9C, 0x00, 0xFA, 0x00, 0xBC, 0x00, 0x38, 0x00, 0x38, 0x00, 0xB8, 0x14, 0xEB, 0x00, 0xBB, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x38, 0x10, 0x28, 0x20, 0x18, 0x10, 0x2C, 0x08, 0x34, 0x14, 0x08, 0x08, 0x34, 0x14, 0x08, 0x00, 0x01, 0x00, 0x02, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5D, 0x00, 0xBB, 0x00, 0x5A, 0x00, 0x28, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0x92, 0x1D, 0x62, 0x3F, 0x40, 0x3E, 0x41, 0x7F, 0x00, 0x7D, 0x83, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xB7, 0x4A, 0x5F, 0xA1, 0xFF, 0x11, 0xFF, 0x22, 0xFF, 0x4A, 0xFF, 0x25, 0xFF, 0x52, 0xFF, 0x14, 0xFF, 0xA1, 0xFF, 0x14, 0xFF, 0x49, 0xFF, 0xAA, 0xFF, 0xA9, 0xFF, 0x54, 0xFF, 0xAA, 0xFF, 0x84, 0xFF, 0x2A, 0xFF, 0x44, 0xFF, 0x12, 0xFF, 0xA8, 0xFF, 0x14, 0xFF, 0xA8, 0xFF, 0x55, 0xF8, 0x07, 0xFC, 0x03, 0xFE, 0x11, 0xFF, 0x40, 0xFF, 0x90, 0xFF, 0x02, 0xFF, 0x04, 0xFF, 0x15, 0x00, 0x00, 0x00, 0x80, 0x00, 0xC0, 0x80, 0x6C, 0x18, 0xE4, 0xFC, 0x22, 0xFC, 0x54, 0xFF, 0x50, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x10, 0x00, 0x21, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x90, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x5B, 0x00, 0x2D, 0x00, 0x17, 0x00, 0x6A, 0x00, 0x1D, 0x00, 0x22, 0x00, 0x2D, 0x0B, 0xF4, 0x05, 0xFA, 0x06, 0xF9, 0x0B, 0xF4, 0x05, 0xFA, 0x03, 0xFC, 0x06, 0xF9, 0x03, 0xBC, 0x40, 0xA0, 0xA0, 0x40, 0xA0, 0x40, 0x50, 0xA0, 0xA0, 0x58, 0x70, 0x88, 0xD0, 0x28, 0xD8, 0x20, 0x00, 0xBE, 0x08, 0x13, 0x03, 0xD8, 0x01, 0x4E, 0x00, 0x8F, 0x00, 0x4F, 0x05, 0x52, 0x07, 0x58, 0x00, 0x00, 0x00, 0x52, 0x00, 0x68, 0x00, 0x51, 0x00, 0x1C, 0x00, 0x9E, 0x02, 0xDD, 0x9E, 0x63, 0x00, 0x80, 0x00, 0x40, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x40, 0xA4, 0xE0, 0x1E, 0x08, 0x16, 0x00, 0x1E, 0x00, 0x1E, 0x04, 0x1A, 0x04, 0x1A, 0x04, 0x02, 0x04, 0x02, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0xFF, 0x00, 0xFF, 0x05, 0xDF, 0x34, 0xBF, 0x6B, 0xFF, 0x15, 0xFF, 0x0A, 0xFF, 0x1D, 0xFF, 0x6A, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0xA9, 0xFF, 0x45, 0xFF, 0x2A, 0xFF, 0xD5, 0xFF, 0x6D, 0xFF, 0xDB, 0xFF, 0xA9, 0xFF, 0x56, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0xEB, 0xFF, 0xAD, 0xFF, 0x56, 0xFF, 0x52, 0xFF, 0xAA, 0xFF, 0xB5, 0xFF, 0xDA, 0xFF, 0x6A, 0xFF, 0x54, 0xFF, 0xBA, 0xFF, 0xD5, 0xFF, 0xAA, 0xFF, 0x2A, 0xFF, 0x45, 0xFF, 0x12, 0xFF, 0x49, 0xFF, 0x14, 0xFF, 0x42, 0xFF, 0x2B, 0xFF, 0x96, 0xFF, 0xAA, 0xFF, 0x59, 0xFF, 0xB4, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0xDA, 0xFF, 0x6A, 0xFF, 0xB5, 0x00, 0x80, 0x40, 0xA0, 0xC0, 0x20, 0xC0, 0x20, 0x80, 0x40, 0xC0, 0xA0, 0xC0, 0xA1, 0xC4, 0x3B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x28, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF4, 0xF8, 0x42, 0xF8, 0x02, 0xF0, 0x0D, 0x00, 0xA2, 0x00, 0x06, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};
const char row2[640] PROGMEM = {
0x00, 0xDB, 0x00, 0xA5, 0x00, 0x5B, 0x00, 0x2F, 0x00, 0xD5, 0x00, 0x2B, 0x04, 0xFB, 0xDB, 0x24, 0x02, 0xFD, 0x05, 0x7A, 0x01, 0xFE, 0x02, 0xFD, 0x05, 0x7A, 0x02, 0xFD, 0x2D, 0xD2, 0xDB, 0x24, 0xB0, 0x48, 0xD8, 0x20, 0x78, 0x80, 0xF0, 0x0C, 0xF8, 0x00, 0xF8, 0x04, 0xF8, 0x07, 0xF8, 0x07, 0x0F, 0x32, 0x1F, 0x45, 0x1F, 0x22, 0x0F, 0xF5, 0x17, 0xEA, 0x7F, 0x85, 0x7F, 0x9B, 0xFF, 0x06, 0xCF, 0x35, 0xFF, 0x4A, 0xFF, 0x81, 0xFF, 0x68, 0xFF, 0xAA, 0xFF, 0xD5, 0xFF, 0x6A, 0xFF, 0xDA, 0xFC, 0x03, 0xFE, 0xA9, 0xFF, 0x54, 0xFF, 0xBA, 0xFF, 0xD7, 0xFF, 0x7D, 0xFF, 0xAB, 0xFF, 0xDE, 0x00, 0x06, 0x05, 0xDA, 0xFF, 0x02, 0xFF, 0x94, 0xFF, 0x50, 0xFF, 0xA6, 0xFF, 0x55, 0xFF, 0xEA, 0x00, 0xC0, 0x00, 0xC2, 0x80, 0x60, 0x00, 0xFE, 0xE0, 0x00, 0xC0, 0x20, 0xC0, 0x40, 0xE0, 0x80, 0x07, 0x02, 0x03, 0x0D, 0x03, 0x11, 0x03, 0x88, 0x03, 0x5E, 0x0F, 0x05, 0x1F, 0x0A, 0x1F, 0x2D, 0xFF, 0xAD, 0xFF, 0x56, 0xFF, 0x6D, 0xFF, 0xDB, 0xFF, 0xEE, 0xFF, 0xBB, 0xFF, 0xD6, 0xFF, 0x7F, 0xFF, 0xB4, 0xFA, 0xD5, 0xF0, 0xAD, 0xE0, 0x58, 0xC0, 0xB0, 0x80, 0xE0, 0x80, 0x40, 0x00, 0xC0, 0xFB, 0x05, 0x81, 0x7F, 0x01, 0x54, 0x00, 0x05, 0x00, 0x0B, 0x03, 0x04, 0x03, 0x0C, 0x01, 0x16, 0xFF, 0xD5, 0xFF, 0x52, 0xFF, 0xA9, 0xFF, 0xD5, 0xFF, 0xAA, 0xFF, 0x6A, 0xFF, 0xAA, 0xFF, 0xB4, 0xFF, 0x6B, 0xFF, 0x56, 0xFF, 0x0D, 0xFF, 0x55, 0xFF, 0xAE, 0xFF, 0x14, 0xFF, 0x00, 0xC0, 0x3F, 0xFF, 0x5A, 0xFF, 0xD5, 0xFF, 0x5A, 0xFF, 0xB5, 0xFF, 0x6E, 0xFF, 0xBD, 0xFF, 0x17, 0x1F, 0xED, 0xE0, 0x5F, 0xF8, 0x00, 0xF8, 0xE4, 0xF8, 0x54, 0xFC, 0xBB, 0xFE, 0xF0, 0xFC, 0xA8, 0xFE, 0xF5, 0x00, 0xA8, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xED, 0x12, 0xD6, 0x29, 0xA9, 0x56, 0xD5, 0x2A, 0xAA, 0x55, 0x04, 0xFB, 0x29, 0xD6, 0xDB, 0x24, 0xBF, 0x40, 0xF7, 0x08, 0x5F, 0xA0, 0xAB, 0x54, 0x5F, 0xA0, 0xAB, 0x54, 0x5F, 0xA0, 0xBF, 0x40, 0xFC, 0x03, 0xF9, 0x06, 0xFF, 0x00, 0xFF, 0x01, 0xFF, 0x01, 0xFF, 0x02, 0xFF, 0x05, 0xFF, 0x02, 0xFF, 0x0D, 0xFF, 0x1B, 0xFF, 0x2E, 0xFF, 0x5B, 0xFF, 0xAD, 0xFF, 0x7B, 0xFF, 0xB7, 0xFF, 0xEC, 0xFF, 0xB5, 0xFF, 0x6A, 0xFF, 0x95, 0xFF, 0x6B, 0xFF, 0xDE, 0xFF, 0xB6, 0xFF, 0x5D, 0xFF, 0xAF, 0xFF, 0x77, 0xFF, 0xDD, 0xFF, 0xB7, 0xFF, 0x7D, 0xFF, 0xF7, 0xFF, 0xDE, 0xFF, 0xFB, 0xFF, 0xEF, 0xFF, 0x55, 0xFF, 0xEA, 0xFF, 0xBD, 0xFF, 0x72, 0xFF, 0xEE, 0xFF, 0xBB, 0xFF, 0xD4, 0xFF, 0x6A, 0xE4, 0x99, 0xFC, 0x93, 0xFF, 0x64, 0xFF, 0x98, 0xFF, 0xAA, 0xFF, 0x77, 0xFF, 0xAD, 0xFF, 0xB6, 0x1F, 0x60, 0x1F, 0xAA, 0x1F, 0xF5, 0x9F, 0x3B, 0xFF, 0x0E, 0xFF, 0x15, 0xFF, 0x0F, 0xFF, 0x97, 0xFF, 0x6D, 0xFF, 0xDA, 0xFF, 0xBE, 0xFE, 0x75, 0xFF, 0xDE, 0xFF, 0xBA, 0xFF, 0x76, 0xFF, 0xED, 0x00, 0x80, 0x00, 0xC0, 0x00, 0x80, 0x00, 0x80, 0x00, 0x81, 0x00, 0xD0, 0x80, 0x72, 0xE0, 0x18, 0x01, 0x2A, 0x21, 0x57, 0x71, 0xDF, 0xFB, 0x65, 0x7B, 0x47, 0x17, 0x6D, 0x1F, 0x4A, 0x3F, 0xD4, 0xFF, 0xDA, 0xFF, 0x68, 0xFF, 0xB4, 0xFC, 0x6B, 0xFE, 0x59, 0xFD, 0x76, 0xFF, 0xAA, 0xFF, 0xF5, 0x80, 0x7D, 0x00, 0xF5, 0x00, 0xEA, 0x00, 0xD5, 0x00, 0xE8, 0xE0, 0x10, 0xE0, 0x50, 0xF0, 0x80, 0x2F, 0xD6, 0x0F, 0x63, 0x07, 0xB6, 0x07, 0x5D, 0x07, 0x9B, 0x07, 0x16, 0x07, 0x17, 0x07, 0xFD, 0xFE, 0xD9, 0xFE, 0x74, 0xFC, 0xEF, 0xFC, 0x92, 0xFE, 0x41, 0xFF, 0x8A, 0xFF, 0x50, 0xFF, 0xAA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0xA0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};
const char row3[640] PROGMEM = {
0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xD2, 0xFF, 0xA4, 0xFF, 0xD2, 0xFF, 0xC8, 0xFF, 0xAA, 0xFF, 0xD4, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x80, 0xFF, 0x10, 0xFF, 0x80, 0xFF, 0x00, 0xFF, 0x80, 0xFF, 0x0D, 0xFF, 0x17, 0xFF, 0x2D, 0xFF, 0x4B, 0xFF, 0x2F, 0xFF, 0x5B, 0xFF, 0x36, 0xFF, 0x5D, 0xFF, 0xBD, 0xFF, 0x76, 0xFF, 0xDB, 0xFF, 0xEA, 0xFF, 0x5B, 0xFF, 0xEF, 0xFF, 0xDD, 0xFF, 0xBB, 0xFF, 0xB6, 0xFF, 0xDD, 0xFF, 0xBB, 0xFF, 0xF6, 0xFF, 0xDF, 0xFF, 0x77, 0xFF, 0xEE, 0xFF, 0xDC, 0xFF, 0xDE, 0xFF, 0xBB, 0xFF, 0x75, 0xFF, 0xFF, 0xFF, 0xED, 0xFF, 0xD9, 0xFF, 0xA0, 0xF5, 0x0A, 0xFF, 0xCB, 0xFF, 0xD5, 0xFF, 0xAE, 0xFF, 0xFB, 0xFF, 0x76, 0xFF, 0xDF, 0xFF, 0x3F, 0xFF, 0x17, 0xFF, 0x5D, 0xFF, 0x6E, 0xFF, 0xAB, 0xFF, 0xAE, 0xFF, 0xD7, 0xFF, 0xEB, 0xFF, 0xB6, 0xFF, 0x79, 0xFF, 0xAB, 0xFF, 0x87, 0xFF, 0x56, 0xFF, 0x8B, 0xFF, 0x87, 0xFF, 0x66, 0xFF, 0xE5, 0xFF, 0xF3, 0xFF, 0x79, 0xFF, 0xAB, 0xFF, 0xD7, 0xFF, 0xAE, 0xFF, 0xFD, 0xFF, 0xEF, 0xFF, 0xFE, 0xFF, 0xFB, 0xF8, 0xC6, 0xFF, 0x61, 0xFF, 0xB6, 0xFF, 0xEB, 0xFF, 0xB7, 0xFF, 0x7F, 0xFF, 0xF7, 0xFF, 0xEF, 0xFF, 0x2A, 0xFF, 0x53, 0xFF, 0xE6, 0xFF, 0xBD, 0xFF, 0x77, 0xFF, 0xFF, 0xFF, 0x5E, 0xFF, 0xFA, 0xFF, 0xDB, 0xFF, 0x76, 0xFF, 0xDD, 0xFF, 0xFB, 0xFF, 0xAE, 0xFF, 0x75, 0xFF, 0xDB, 0xFF, 0xAB, 0xE1, 0x58, 0xF3, 0x85, 0xFF, 0x83, 0xFF, 0x66, 0xFF, 0xBD, 0xFF, 0xEB, 0xFF, 0xB7, 0xFF, 0x7F, 0xEF, 0x1A, 0xFF, 0x5D, 0xFF, 0xBA, 0xFF, 0xF6, 0xFF, 0xAD, 0xFF, 0xDB, 0xFF, 0xE6, 0xFF, 0xBD, 0xFF, 0xAD, 0xFF, 0x55, 0xFF, 0x6A, 0xFF, 0x9D, 0xFF, 0x52, 0xFF, 0x4D, 0xFF, 0xA2, 0xFF, 0xDD, 0xC0, 0x20, 0xC0, 0xA0, 0xE0, 0x40, 0xC0, 0xA0, 0xE0, 0x80, 0xE0, 0x53, 0xF0, 0xA1, 0xF0, 0x48, 0x00, 0x04, 0x08, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x2B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD4, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0xB6, 0xFF, 0xEA, 0xFF, 0xDD, 0xFF, 0xEB, 0xFF, 0xDE, 0xFF, 0xFB, 0xFF, 0xEE, 0xFF, 0xFD, 0xFF, 0xEB, 0xFF, 0x50, 0xFF, 0xA9, 0xFF, 0x42, 0xFF, 0xC3, 0xFF, 0xC1, 0xF7, 0xC8, 0xFD, 0xC2, 0xEB, 0xB4, 0xFF, 0xB9, 0xFF, 0xF4, 0xFF, 0xAE, 0xFF, 0xBB, 0xFF, 0x74, 0xFF, 0xD8, 0xF0, 0x2F, 0xE0, 0x5B, 0xFF, 0x6A, 0xFF, 0x5D, 0xFF, 0xF5, 0xFF, 0x5B, 0xFF, 0xAF, 0xFF, 0x3F, 0xFF, 0x5D, 0xFF, 0x1B, 0xFF, 0xB8, 0xFE, 0x79, 0xFE, 0xF1, 0xFE, 0xE9, 0xF5, 0xFA, 0xFE, 0xC1, 0xFC, 0xB3, 0xFE, 0xF9, 0x40, 0xBF, 0x80, 0x3F, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xF7, 0x00, 0xFF, 0x80, 0x7F, 0x9F, 0x6E, 0x4F, 0xB5, 0x2F, 0xDB, 0x1F, 0xE7, 0x1F, 0xE5, 0x2F, 0xD3, 0x1F, 0xE3, 0x0B, 0xF7, 0xFF, 0xEB, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xEF, 0xFF, 0x7D, 0xFF, 0xFB, 0xFF, 0x5E, 0xFF, 0xBB, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xF7, 0xFF, 0xEF, 0xFF, 0x7F, 0xFF, 0xBF, 0xFF, 0xAF, 0xFF, 0x5F, 0xFF, 0xBF, 0xFF, 0xBF, 0xFF, 0xFE, 0xFF, 0xFB, 0xFF, 0xFD, 0xFF, 0xEF, 0xFF, 0xFD, 0xFF, 0xEB, 0xFF, 0xDD, 0xFF, 0xF6, 0xFF, 0xD5, 0xFF, 0xA0, 0xFF, 0xC0, 0xF9, 0x66, 0xFC, 0xA3, 0xFC, 0x53, 0xFD, 0x26, 0xFE, 0x93, 0xFF, 0x26, 0xFF, 0x01, 0x57, 0xAA, 0x2F, 0xDD, 0xBF, 0x4A, 0x7F, 0x95, 0x7F, 0xAA, 0xFF, 0x54, 0xFF, 0xDF, 0xFF, 0x7F, 0xFF, 0xDF, 0xFF, 0x77, 0xFF, 0xAE, 0xFF, 0x5B, 0xFF, 0xAD, 0xFF, 0xAA, 0xFF, 0xC6, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xBB, 0xFF, 0xFE, 0xFF, 0xF7, 0xFF, 0x6E, 0xFF, 0xDF, 0xFF, 0xB6, 0xFF, 0xAB, 0xFF, 0x7A, 0xFF, 0xD5, 0xFF, 0xAB, 0xFF, 0xDB, 0xFF, 0xF5, 0xFF, 0xAE, 0xF8, 0xEC, 0xF8, 0x54, 0xFC, 0xA0, 0xFC, 0xD2, 0xFF, 0xA8, 0xFF, 0x64, 0xFF, 0xD1, 0xFF, 0xE2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x38, 0xFE, 0x01, 0xFF, 0xA8, 0x00, 0xAB, 0x00, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0xFC, 0x08, 0x70, 0x00, 0x5C, 0x00, 0x2C, 0x00, 0x14, 0x00, 0x0E, 0x00, 0x0A, 0x00, 0x0E, 
};
const char row4[640] PROGMEM = {
0xFF, 0xFF, 0xFF, 0xED, 0xFF, 0xFA, 0xFF, 0xD6, 0xFF, 0xEC, 0xFF, 0xDA, 0xFF, 0xEE, 0xFF, 0xDA, 0xF7, 0x49, 0xEF, 0x53, 0x7F, 0x83, 0xEF, 0x13, 0x7F, 0x8E, 0xBF, 0x4D, 0x7F, 0x9F, 0xBF, 0x6F, 0xC0, 0xB3, 0xC0, 0x44, 0xC0, 0x91, 0xC0, 0xA4, 0xC0, 0xE8, 0xC0, 0xE0, 0xC0, 0xF1, 0xE0, 0x92, 0x7F, 0x8F, 0x3F, 0xD7, 0x1F, 0x6F, 0x1F, 0xA7, 0x0F, 0x2E, 0x1F, 0x8B, 0x07, 0x3F, 0x6F, 0x97, 0xFF, 0xF5, 0xFF, 0xFB, 0xFF, 0x7F, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x3F, 0xE0, 0xDF, 0xE0, 0x9F, 0xC0, 0xBF, 0xE0, 0x1F, 0xE0, 0x1F, 0xE9, 0x96, 0xF2, 0x4D, 0x17, 0xE9, 0x2B, 0xD7, 0x17, 0xEB, 0x27, 0xDB, 0x0F, 0xF7, 0x5F, 0xAF, 0x3F, 0xDF, 0xFF, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0x7F, 0xFF, 0x4F, 0xFF, 0xAF, 0xFF, 0xBF, 0xFF, 0xD6, 0xFF, 0x7F, 0xFF, 0xEF, 0xFF, 0xDF, 0xFF, 0xBF, 0xFF, 0xBB, 0xFF, 0xED, 0xFF, 0xB6, 0xFF, 0xED, 0xFF, 0xFA, 0xFF, 0xB7, 0xFF, 0x6D, 0xFF, 0xFA, 0xFF, 0x48, 0xFF, 0x52, 0xFF, 0xA4, 0xFF, 0x52, 0xFF, 0xA9, 0xFF, 0x54, 0xFF, 0xAB, 0xFF, 0xB4, 0xFF, 0x69, 0xFF, 0x52, 0xFF, 0xA5, 0xFF, 0x54, 0xFF, 0x29, 0xFF, 0xA5, 0xFF, 0x48, 0xFF, 0x92, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0x2A, 0xFF, 0xAD, 0xFF, 0xAA, 0xFF, 0xBF, 0xFF, 0xDB, 0xFF, 0x6F, 0xFF, 0xB5, 0xFF, 0x5B, 0xFF, 0xAD, 0xFF, 0x56, 0xFF, 0xAD, 0xFF, 0xDB, 0xFF, 0xAD, 0xFF, 0xEF, 0xFF, 0xF7, 0xFF, 0xEE, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xAA, 0xFF, 0xD5, 0xFF, 0x76, 0xFF, 0xD9, 0xFF, 0xF6, 0xFF, 0xEA, 0xFF, 0xDD, 0xFF, 0x7B, 0xFE, 0xA1, 0xFD, 0x5A, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0x9A, 0xFF, 0x54, 0xFF, 0xAA, 0xFF, 0xF4, 0x00, 0x80, 0x80, 0x40, 0xF0, 0x0E, 0xFC, 0x47, 0xFE, 0xAB, 0xFE, 0x59, 0xFF, 0x36, 0xFF, 0x9D, 0x00, 0x06, 0x00, 0x05, 0x00, 0x03, 0x02, 0x01, 0x00, 0x5F, 0x80, 0x57, 0x80, 0x7F, 0xD0, 0x2F, 0xFF, 0xD5, 0xFF, 0xAA, 0xF7, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x55, 0x00, 0x3A, 0x7F, 0x8F, 0x7F, 0x9F, 0x1F, 0xEF, 0x3F, 0x16, 0x7F, 0x0D, 0x0F, 0xB7, 0x0F, 0x55, 0x0F, 0xBB, 0xE0, 0x98, 0xF0, 0xCA, 0xF8, 0x45, 0xF8, 0xE7, 0xFC, 0xF7, 0xFF, 0xBC, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x6F, 0xFF, 0x57, 0x7F, 0xAB, 0x7F, 0x8F, 0x7F, 0xDF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x6F, 0xFF, 0xF7, 0xFF, 0xED, 0xFF, 0xFA, 0xFF, 0xF4, 0xFF, 0x58, 0xFF, 0xEF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xBB, 0xFF, 0x2F, 0xFF, 0x85, 0xFF, 0x06, 0xFF, 0x7B, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xEF, 0xFF, 0xBF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0x7F, 0xFF, 0xAF, 0xFF, 0x5F, 0xFF, 0xEF, 0xFF, 0xBF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xDD, 0xFF, 0x76, 0xFF, 0xFB, 0xFF, 0xED, 0xFF, 0xDE, 0xFF, 0xBB, 0xFF, 0xFD, 0xFF, 0xF6, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0xB5, 0xFF, 0x55, 0xFF, 0x6A, 0xFF, 0xD5, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0x2A, 0xFF, 0xD7, 0xFF, 0x2D, 0xFF, 0x57, 0xFF, 0xAE, 0xFF, 0x57, 0xFF, 0xAD, 0xFF, 0x5B, 0xFF, 0xAF, 0xFF, 0x5B, 0xFF, 0x6F, 0xFF, 0xFB, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xFE, 0xFF, 0xFD, 0xFF, 0xF7, 0xFF, 0xF7, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xDD, 0xFF, 0x7F, 0xFF, 0xF7, 0xFF, 0xDE, 0xFF, 0xFF, 0xFF, 0xBA, 0xFF, 0x6D, 0xFF, 0xDB, 0xFF, 0xFF, 0xFF, 0xBB, 0xFF, 0x6F, 0xFF, 0xAF, 0xFF, 0xAB, 0xFF, 0xB6, 0xFF, 0x6C, 0xFF, 0xDA, 0xFF, 0x7C, 0xFF, 0xEA, 0xFF, 0xB6, 0xFF, 0x7A, 0xFF, 0xF4, 0x3E, 0xC1, 0x02, 0x5D, 0x00, 0xF0, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x80, 0x00, 0x00, 0xD0, 
};
const char row5[640] PROGMEM = {
0x00, 0x6D, 0x00, 0x35, 0x00, 0xDA, 0x00, 0x2B, 0x00, 0x57, 0x00, 0x3E, 0x00, 0x6B, 0x00, 0xFD, 0x1F, 0xA7, 0x0F, 0x7F, 0x3F, 0xD7, 0x3F, 0xCF, 0x5F, 0xAF, 0x3F, 0xCF, 0x3F, 0xDF, 0x7F, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xDA, 0xFF, 0xBF, 0xFF, 0x7A, 0xFF, 0xFD, 0xFF, 0xF6, 0xFF, 0xED, 0xFF, 0xDE, 0xFF, 0xBB, 0xFF, 0xA0, 0xFF, 0x00, 0xFB, 0x04, 0xFF, 0x00, 0xFB, 0x84, 0xFF, 0xC0, 0xFD, 0xB2, 0xFF, 0x50, 0xFF, 0x0B, 0xFF, 0x16, 0xFF, 0x2D, 0xFF, 0x2A, 0xFF, 0x55, 0xFF, 0x5B, 0xFF, 0xAA, 0xFF, 0xD5, 0xFF, 0x6F, 0xFF, 0xDD, 0xFF, 0x6B, 0xFF, 0xD7, 0xFF, 0xAD, 0xFF, 0x76, 0xFF, 0xDB, 0xFF, 0xAD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x77, 0xFF, 0xDF, 0xFF, 0xBF, 0xFF, 0x6F, 0xFF, 0xB7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0x7E, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x6D, 0xFF, 0xFF, 0xFF, 0xF5, 0xFF, 0xEE, 0xFF, 0xDD, 0xFF, 0xFB, 0xFF, 0xF6, 0xFF, 0xEF, 0xFF, 0xAA, 0xFF, 0x5B, 0xFF, 0xB5, 0xFF, 0xD6, 0xFF, 0x6A, 0xFF, 0xB5, 0xFF, 0xDB, 0xFF, 0x6D, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0xAA, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0x77, 0xFF, 0xD6, 0xFF, 0x2A, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0xAD, 0xFF, 0x57, 0xFF, 0xEE, 0xFF, 0xBD, 0xFF, 0xDB, 0xFF, 0xB7, 0xFF, 0x6F, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0x5E, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xBD, 0xFF, 0xFB, 0xFF, 0x7F, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0x6F, 0xFF, 0xFD, 0xFF, 0xBF, 0xFF, 0xF7, 0xFF, 0xFE, 0xFF, 0xEF, 0xFF, 0xDC, 0xFF, 0xFE, 0xFE, 0xB1, 0xFF, 0xD6, 0xFF, 0xAD, 0xFF, 0xFA, 0xFF, 0xBD, 0xFF, 0x76, 0xFF, 0xEF, 0xFF, 0x38, 0x78, 0xCF, 0xFE, 0xF9, 0xFE, 0xE9, 0xFE, 0xD1, 0xFE, 0x71, 0xFD, 0xD2, 0xFE, 0xA9, 0xFE, 0x31, 0xB2, 0x4D, 0x00, 0xA4, 0x00, 0x00, 0x00, 0x12, 0x00, 0x40, 0x00, 0xC4, 0x00, 0xE0, 0x00, 0x88, 0x00, 0x92, 0x00, 0xB5, 0x00, 0x6A, 0x00, 0xD7, 0x00, 0x2D, 0x00, 0x5A, 0x00, 0x35, 0x00, 0xDA, 0x00, 0x37, 0x7F, 0x9F, 0x7F, 0xBF, 0x3F, 0xDF, 0x3F, 0xD7, 0x0F, 0xBD, 0x1F, 0x63, 0x07, 0xBD, 0x0B, 0x77, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x76, 0xFF, 0xFD, 0xFF, 0xD6, 0xFF, 0xBB, 0xFF, 0xED, 0xFF, 0xB6, 0xFF, 0xED, 0xFF, 0xDA, 0xFF, 0xAB, 0xFF, 0x6C, 0xFF, 0xD5, 0xFF, 0x55, 0xFF, 0xAA, 0xFF, 0xAD, 0xFF, 0x55, 0xFF, 0xEB, 0xFF, 0x5B, 0xFF, 0xAD, 0xFF, 0x76, 0xFF, 0xAB, 0xFF, 0xAD, 0xFF, 0x56, 0xFF, 0xBA, 0xFF, 0x6B, 0xFF, 0x5A, 0xFF, 0xB7, 0xFF, 0xAD, 0xFF, 0x76, 0xFF, 0x5B, 0xFF, 0xED, 0xFF, 0xB6, 0xFF, 0x5B, 0xFF, 0xDF, 0xFF, 0x6D, 0xFF, 0xBB, 0xFF, 0xD7, 0xFF, 0x6E, 0xFF, 0xBB, 0xFF, 0xD6, 0xFF, 0x6D, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFD, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFE, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFE, 0xFF, 0xDF, 0xFF, 0xF7, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xDF, 0xFF, 0xB7, 0xFF, 0xEF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xF7, 0xFF, 0xEF, 0xFF, 0xBE, 0xFF, 0xFD, 0xFF, 0xBB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0x7F, 0xFF, 0xFE, 0xFF, 0xFD, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFC, 0xFE, 0xFF, 0xF8, 0x7C, 0xF8, 0xF0, 0xFC, 0xEA, 0xFE, 0xE0, 0xD0, 0xAC, 0xC0, 0xA0, 0xC0, 0x20, 0x00, 0xE0, 0x58, 0x34, 0x00, 0x6C, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xBC, 0x00, 0x08, 0x00, 0x81, 0x00, 0x00, 0x00, 0x08, 0x00, 0x01, 0x00, 0x22, 0x00, 0x00, 0x00, 0x40, 0x00, 0x84, 0x00, 0x08, 0x00, 0x10, 0x00, 0x42, 0x00, 0x10, 0x00, 0x24, 0x00, 0x40, 
};
const char row6[640] PROGMEM = {
0x00, 0xEC, 0x00, 0xBB, 0x00, 0x6A, 0x00, 0x2D, 0x00, 0xDB, 0x00, 0x36, 0x00, 0x6D, 0x00, 0xDE, 0x03, 0xDE, 0x03, 0x2D, 0x03, 0xD5, 0x03, 0x4F, 0x07, 0xBA, 0x03, 0xAD, 0x03, 0x6C, 0x00, 0xD7, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0x4F, 0xFF, 0xB7, 0xFF, 0xFD, 0xFF, 0x6B, 0xFF, 0xFE, 0xFF, 0xF7, 0xFF, 0xDE, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0x5D, 0xFF, 0xB6, 0xFF, 0x6D, 0xFF, 0xDB, 0xFF, 0xB6, 0xFF, 0xED, 0xFF, 0xDF, 0xFF, 0xBB, 0xFF, 0xAD, 0xFF, 0xDA, 0xFF, 0xB5, 0xFF, 0x6E, 0xFF, 0xDB, 0xFF, 0xED, 0xFF, 0xB6, 0xFF, 0xED, 0xFF, 0xB5, 0xFF, 0xDB, 0xFF, 0xB6, 0xFF, 0xDB, 0xFF, 0x6D, 0xFF, 0xB6, 0xFF, 0xED, 0xFF, 0xBB, 0xFF, 0xBB, 0xFF, 0x6F, 0xFF, 0xDB, 0xFF, 0xB7, 0xFF, 0x6E, 0xFF, 0xFD, 0xFF, 0xDB, 0xFF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7D, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xF8, 0xFF, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xD5, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFA, 0xFF, 0x78, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF5, 0xFF, 0xAA, 0xFF, 0xA0, 0xFE, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0x5F, 0xFF, 0x03, 0xED, 0x13, 0x92, 0x6D, 0xFF, 0xFE, 0xFF, 0xFD, 0xFE, 0xF4, 0xF8, 0xEE, 0xFC, 0xF2, 0xF8, 0xF4, 0xF8, 0xE4, 0xF8, 0x76, 0x00, 0x80, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x42, 0x00, 0x08, 0x00, 0x00, 0x00, 0x11, 0x00, 0x22, 0x00, 0x04, 0x00, 0x88, 0x00, 0x12, 0x00, 0x20, 0x00, 0x8A, 0x00, 0x00, 0x00, 0x24, 0x00, 0x11, 0x00, 0x44, 0x00, 0xBB, 0x00, 0x75, 0x00, 0xEF, 0x00, 0x9D, 0x00, 0xFF, 0x00, 0x7F, 0x01, 0xFE, 0x02, 0xFD, 0x00, 0xBB, 0x00, 0x6F, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x24, 0xDB, 0x08, 0xF7, 0x51, 0xAE, 0xCF, 0x33, 0x8F, 0x73, 0x07, 0xFB, 0x07, 0xFF, 0x07, 0xF8, 0x1F, 0xE2, 0x4F, 0xB1, 0x3F, 0xC5, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xDF, 0xFF, 0x8A, 0xFF, 0xA0, 0xFF, 0x5C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0xFD, 0x02, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xAF, 0xDF, 0x24, 0x55, 0xAA, 0xEA, 0x15, 0xFF, 0x77, 0xFF, 0xEF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x10, 0x55, 0xAA, 0x22, 0xDD, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x3F, 0xC3, 0x43, 0xBC, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFA, 0xFF, 0xA0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0x56, 0xFF, 0x88, 0xF5, 0x0A, 0xDA, 0x25, 0xFF, 0xF0, 0xEB, 0xF4, 0xC5, 0xB2, 0x80, 0x4B, 0xF0, 0x8E, 0xFF, 0x2D, 0xFF, 0x16, 0xFF, 0x21, 0xDA, 0x25, 0x6A, 0x95, 0x55, 0xAA, 0x00, 0xFF, 0x00, 0xAA, 0xC0, 0x1F, 0xFF, 0xDA, 0xFF, 0x2D, 0xFF, 0x38, 0xBD, 0x7A, 0x7E, 0x99, 0x1C, 0xFB, 0x0C, 0xFA, 0x0C, 0x35, 0xCC, 0x32, 0xFD, 0xD7, 0xE9, 0x16, 0x12, 0xED, 0x40, 0xBF, 0x00, 0xF6, 0x07, 0xA9, 0x1F, 0x6E, 0xFF, 0x3F, 0xFF, 0x6D, 0x20, 0xDF, 0x00, 0xEB, 0x00, 0x5F, 0x1F, 0xA5, 0xBF, 0x5F, 0xFF, 0xF6, 0xFF, 0xEF, 0xFF, 0x5A, 0x7C, 0xB3, 0x3C, 0xCA, 0x1C, 0xEB, 0xFE, 0xA9, 0xFF, 0x74, 0xFF, 0xE8, 0xFF, 0xA8, 0xFF, 0x90, 0x00, 0x08, 0x00, 0x80, 0x00, 0x52, 0x00, 0xA4, 0x00, 0x50, 0x00, 0xD5, 0x80, 0x6A, 0xC0, 0x2A, 0x00, 0x08, 0x00, 0xA2, 0x00, 0x49, 0x00, 0x95, 0x00, 0x22, 0x00, 0x49, 0x00, 0x12, 0x00, 0xA5, 0x00, 0x88, 0x00, 0x51, 0x00, 0x24, 0x00, 0x55, 0x00, 0xAA, 0x00, 0x55, 0x00, 0x49, 0x00, 0x2A, 0x00, 0x88, 0x00, 0x22, 0x00, 0x88, 0x00, 0x20, 0x00, 0x44, 0x00, 0x28, 0x00, 0x44, 0x00, 0x92, 
};
const char row7[640] PROGMEM = {
0x04, 0xFB, 0x09, 0xF6, 0x00, 0xFF, 0x02, 0xFD, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x84, 0x7B, 0x2A, 0xD5, 0x55, 0xAA, 0x8B, 0x74, 0x13, 0xEC, 0x26, 0xD9, 0x01, 0xFE, 0x00, 0x00, 0xBF, 0x41, 0xFF, 0x02, 0xFF, 0x05, 0xFF, 0x04, 0xDF, 0x20, 0xBF, 0x64, 0x7F, 0x80, 0x00, 0x00, 0xFF, 0x27, 0xFF, 0xA8, 0x7F, 0xD2, 0xFF, 0xA5, 0xFF, 0x40, 0xFF, 0x89, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xEE, 0xFF, 0x91, 0xFF, 0x4A, 0xFF, 0x24, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xF5, 0x8A, 0xFF, 0x4A, 0xFF, 0x22, 0xFF, 0x84, 0xFF, 0x00, 0xFF, 0x00, 0xEF, 0x10, 0x00, 0x00, 0x48, 0xB7, 0xFF, 0x80, 0xFF, 0x14, 0xFF, 0x21, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x97, 0x68, 0xFF, 0x2B, 0xFF, 0x80, 0xFF, 0x00, 0xF6, 0x09, 0xDD, 0x22, 0xDA, 0x25, 0x00, 0x00, 0xFF, 0x00, 0xFB, 0x44, 0xFA, 0x05, 0xF3, 0x0C, 0x40, 0xBF, 0xB3, 0x4C, 0x40, 0xBF, 0x00, 0x00, 0xA4, 0x5B, 0x5A, 0xA5, 0x90, 0x6F, 0x56, 0xA9, 0x00, 0xFF, 0xAC, 0x53, 0x00, 0xFF, 0x00, 0x00, 0x85, 0x7A, 0xAA, 0x55, 0x41, 0xBE, 0xA6, 0x59, 0x00, 0xFF, 0xB2, 0x4D, 0x00, 0xFF, 0x00, 0x00, 0x7B, 0x84, 0xA9, 0x56, 0x10, 0xEF, 0xA9, 0x56, 0x00, 0xFF, 0x95, 0x68, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x02, 0xAF, 0x50, 0x44, 0xBB, 0x4A, 0xB5, 0x00, 0xFF, 0x4A, 0xB5, 0x21, 0xDE, 0x00, 0x00, 0xFF, 0xB5, 0xFB, 0x04, 0x52, 0xAD, 0x52, 0xAD, 0x01, 0xFE, 0xA8, 0x57, 0x11, 0xEE, 0x00, 0x00, 0xFF, 0x20, 0xF5, 0x0A, 0x08, 0xF7, 0xD4, 0x2B, 0x00, 0xFF, 0x8A, 0x75, 0x25, 0xDA, 0x00, 0x00, 0xFD, 0x02, 0xD6, 0x29, 0xA9, 0x56, 0x54, 0xAB, 0x22, 0xDD, 0x10, 0xEF, 0x29, 0xD6, 0x00, 0x00, 0x00, 0xF5, 0xA0, 0x40, 0x00, 0xFA, 0x00, 0xF8, 0x80, 0x7E, 0x00, 0xFD, 0x80, 0x7F, 0x00, 0x00, 0x00, 0x12, 0x00, 0x20, 0x00, 0x04, 0x00, 0x88, 0x00, 0x21, 0x00, 0x02, 0x00, 0x40, 0x00, 0x00, 0x00, 0x95, 0x00, 0x22, 0x00, 0x44, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x48, 0x00, 0x25, 0x00, 0x49, 0x00, 0x82, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

const char * const row_table[] PROGMEM = 	   // change "string_table" name to suit
{   
  row0,
  row1,
  row2,
  row3,
  row4,
  row5,
  row6,
  row7
};

uint8_t buffer[640];




void setup() {
  setupPrinter(GBIn, GBOut, GBClock);
  Serial.begin(9600);
   

}

void loop() {
  //Serial.println("Gameboy Printer for Arduino");
   
  if (Serial.available() > 0) {

    cmd = Serial.read();

    if(cmd == 'h') {
      hadcon();
    }
    if(cmd == 'g') {
      for (int j=0;j<8;j++) {
        for (int i=0;i<640;i++) {
          buffer[i] = pgm_read_byte_near(pgm_read_word(row_table +j) + i);
          Serial.print(buffer[i], HEX);
          Serial.print(' ');          
        }
        Serial.println();
      }
    }
  }
}

void sendRow (uint8_t row2send[]) {
    CRC = 0;
    Serial.println("Data");
    CRC += beginData();
    for(int i=0; i<640; ++i) {
      uint8_t cmd = row2send[i];
      CRC += cmd;
      GBSerialOut(cmd);
    }

    if(endData(CRC)) //0x27E06
    { 
      Serial.println("Data sent");
    }
    printStatusCode(-1);
}

void hadcon() {
  sendInitialize();
  getStatusCode();
  
  for (int j=0;j<8;j++) {
    for (int i=0;i<640;i++) {
      buffer[i] = pgm_read_byte_near(pgm_read_word(row_table +j) + i);
    }
    sendRow(buffer);
  }
  
  sendInquiry();
  GBPCommand(GBData,0);
  printStatusCode(-1);
  sendPrint(1,3,0xE4,0x40);
  printStatusCode(-1);
}
